Процедура ОбработкаПроведения(Отказ, Режим)
	
	// регистр ЗначенияПоказателей
	Движения.ЗначенияПоказателей.Записывать = Истина;
	Для Каждого СтрокаТабЧасти Из Показатели Цикл
		Движение = Движения.ЗначенияПоказателей.Добавить();
		Движение.Период = ?(УказыватьДатуВТабЧасти, СтрокаТабЧасти.Дата, Дата);
		Движение.Периодичность = Периодичность;
		Движение.Контрагент = Контрагент;
		Движение.СтандартОтчетности = ?(УказыватьСтандартОтчетностиВТабЧасти, СтрокаТабЧасти.СтандартОтчетности, СтандартОтчетности);
		Движение.Показатель = СтрокаТабЧасти.Показатель;
		Движение.ЗначениеПоказателя = СтрокаТабЧасти.ЗначениеПоказателя * Множитель;
		Движение.Валюта = Валюта;
	КонецЦикла;
		
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли; 
	
	ПериодичностьШапки = ?(УказыватьДатуВТабЧасти, Перечисления.Периодичность.Год, Периодичность);
	ДатаНачПериода = ОбщегоНазначенияКлиентСервер.ПолучитьДатуНачалаПериода(Дата, ПериодичностьШапки);
	Если Дата <> ДатаНачПериода Тогда
		Дата = ДатаНачПериода;
	КонецЕсли;
	
	Если УказыватьДатуВТабЧасти Тогда
		Дата1 = НачалоГода(Дата);
		Дата2 = КонецГода(Дата);
		Для Каждого СтрокаТабЧасти Из ЭтотОбъект.Показатели Цикл
			ТекДата = СтрокаТабЧасти.Дата;
			Если НЕ ЗначениеЗаполнено(ТекДата) Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю("В строке #" + СтрокаТабЧасти.НомерСтроки + " не задана Дата!" ,,,, Отказ);
			ИначеЕсли ТекДата < Дата1 Или Дата2 < ТекДата Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю("В строке #" + СтрокаТабЧасти.НомерСтроки + " Дата находится за пределами года документа!" ,,,, Отказ);
			Иначе 
				ДатаНачПериода = ОбщегоНазначенияКлиентСервер.ПолучитьДатуНачалаПериода(СтрокаТабЧасти.Дата, Периодичность);
				Если СтрокаТабЧасти.Дата <> ДатаНачПериода Тогда
					СтрокаТабЧасти.Дата = ДатаНачПериода;
				КонецЕсли;
			КонецЕсли; 
		КонецЦикла; 
	КонецЕсли; 
	
	Если НЕ ЗначениеЗаполнено(Множитель) Тогда
		Множитель = 1;
	КонецЕсли;
	
	Если УказыватьСтандартОтчетностиВТабЧасти Тогда
		СтандартОтчетности = Справочники.СтандартыОтчетности.ПустаяСсылка();
	КонецЕсли; 
	
	// АВТОПРОВЕРКА
	ЗначенияПоказателей = Новый Соответствие;
	Для Каждого СтрокаТабЧасти Из ЭтотОбъект.Показатели Цикл
		ЗначенияПоказателей.Вставить(СтрокаТабЧасти.Показатель, СтрокаТабЧасти.ЗначениеПоказателя);
	КонецЦикла; 
	Для Каждого СтрокаТабЧасти Из ЭтотОбъект.Показатели Цикл
		РезультатПроверки = ОбщегоНазначенияСервер.ПроверитьЗначениеПоказателя(ЗначенияПоказателей, СтрокаТабЧасти.Показатель);
		Если РезультатПроверки <> Неопределено
			И (НЕ РезультатПроверки) Тогда
			СообщениеОбОшибке = "Для показателя " + СтрокаТабЧасти.Показатель + " не выполняется условие проверки """ + СтрокаТабЧасти.Показатель.ФормулаПроверки + "!";
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СообщениеОбОшибке,,,, Отказ);
		КонецЕсли; 
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	ПроверяемыеРеквизиты.Добавить("Контрагент");
	ПроверяемыеРеквизиты.Добавить("Периодичность");
	
КонецПроцедуры
