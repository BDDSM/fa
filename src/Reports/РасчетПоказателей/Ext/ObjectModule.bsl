Процедура ДобавитьУсловноеОформлениеПоказателей(Настройки)
	
	Если 1=2 Тогда
		Настройки = КомпоновщикНастроек.Настройки;
	КонецЕсли; 
	
	Префикс = "__$$";
	Суффикс = "$$__";
	
	ДлинаПрефикса = СтрДлина(Префикс);
	ДлинаСуффикса = СтрДлина(Суффикс);
	
	МассивУдаляемых = Новый Массив; 
	Для Каждого ЭлементУО Из Настройки.УсловноеОформление.Элементы Цикл
		Если Лев(ЭлементУО.Представление, ДлинаПрефикса) = Префикс
			И Прав(ЭлементУО.Представление, ДлинаСуффикса) = Суффикс Тогда
			МассивУдаляемых.Добавить(ЭлементУО);
		КонецЕсли; 
	КонецЦикла; 
	Для Каждого ЭлементУО Из МассивУдаляемых Цикл
		Настройки.УсловноеОформление.Элементы.Удалить(ЭлементУО);
	КонецЦикла; 
	
	Если НЕ ФлагИспользоватьВыделениеЦветом Тогда
		Возврат;
	КонецЕсли; 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПоказателиУсловноеОформление.Ссылка КАК Ссылка,
	|	ПоказателиУсловноеОформление.Ссылка.Наименование КАК Наименование,
	|	ПоказателиУсловноеОформление.Ссылка.Код КАК Код,
	|	ПоказателиУсловноеОформление.НомерСтроки КАК НомерСтроки,
	|	ПоказателиУсловноеОформление.ЗначениеОт КАК ЗначениеОт,
	|	ПоказателиУсловноеОформление.ЗначениеДо КАК ЗначениеДо,
	|	ПоказателиУсловноеОформление.ЦветФона.ЦветСтрокой КАК ЦветФонаСтрокой
	|ИЗ
	|	Справочник.Показатели.УсловноеОформление КАК ПоказателиУсловноеОформление";

	Выборка = Запрос.Выполнить().Выбрать();
	
	ПолеПоказатель = Новый ПолеКомпоновкиДанных("Показатель");
	ПолеЗначениеПоказателя = Новый ПолеКомпоновкиДанных("ЗначениеПоказателя");
	ПолеУстановлен = Новый ПолеКомпоновкиДанных("Установлен");
	//ПараметрЦветФона = Новый ПараметрКомпоновкиДанных("ЦветФона");
	
	Пока Выборка.Следующий() Цикл
		
		ЭлементУО = Настройки.УсловноеОформление.Элементы.Добавить();
		
		ЭлементУО.Представление = Префикс + Выборка.Наименование + "_" + Выборка.Код + "_" + Выборка.НомерСтроки + Суффикс;
		
		ЭлементУО.ИспользоватьВГруппировке = ИспользованиеУсловногоОформленияКомпоновкиДанных.Использовать;
		ЭлементУО.ИспользоватьВЗаголовке = ИспользованиеУсловногоОформленияКомпоновкиДанных.НеИспользовать;
		ЭлементУО.ИспользоватьВЗаголовкеПолей = ИспользованиеУсловногоОформленияКомпоновкиДанных.НеИспользовать;
		ЭлементУО.ИспользоватьВИерархическойГруппировке = ИспользованиеУсловногоОформленияКомпоновкиДанных.НеИспользовать;
		ЭлементУО.ИспользоватьВОбщемИтоге = ИспользованиеУсловногоОформленияКомпоновкиДанных.НеИспользовать;
		ЭлементУО.ИспользоватьВОтборе = ИспользованиеУсловногоОформленияКомпоновкиДанных.НеИспользовать;
		ЭлементУО.ИспользоватьВПараметрах = ИспользованиеУсловногоОформленияКомпоновкиДанных.НеИспользовать;
		
		ЦветФона = Справочники.Цвета.ПолучитьЦветИзСтроки(Выборка.ЦветФонаСтрокой);
		ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветФона", ЦветФона);
		
		ОформляемоеПоле = ЭлементУО.Поля.Элементы.Добавить();
		ОформляемоеПоле.Поле = ПолеЗначениеПоказателя;
		ОформляемоеПоле.Использование = Истина;
		
		ГруппаИ = ЭлементУО.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
		ГруппаИ.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
		
		ЭлементПоказатель = ГруппаИ.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементПоказатель.ЛевоеЗначение		= ПолеПоказатель;
		ЭлементПоказатель.ВидСравнения		= ВидСравненияКомпоновкиДанных.Равно;
		ЭлементПоказатель.ПравоеЗначение	= Выборка.Ссылка;
		ЭлементПоказатель.Использование		= Истина;
		
		ЭлементОт = ГруппаИ.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОт.ЛевоеЗначение		= ПолеЗначениеПоказателя;
		ЭлементОт.ВидСравнения		= ВидСравненияКомпоновкиДанных.БольшеИлиРавно;
		ЭлементОт.ПравоеЗначение	= Выборка.ЗначениеОт;
		ЭлементОт.Использование		= Истина;
		
		ЭлементДо = ГруппаИ.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементДо.ЛевоеЗначение		= ПолеЗначениеПоказателя;
		ЭлементДо.ВидСравнения		= ВидСравненияКомпоновкиДанных.МеньшеИлиРавно;
		ЭлементДо.ПравоеЗначение	= Выборка.ЗначениеДо;
		ЭлементДо.Использование		= Истина;
		
		ЭлементУстановлен = ГруппаИ.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементУстановлен.ЛевоеЗначение		= ПолеУстановлен;
		ЭлементУстановлен.ВидСравнения		= ВидСравненияКомпоновкиДанных.Равно;
		ЭлементУстановлен.ПравоеЗначение	= Истина;
		ЭлементУстановлен.Использование		= Истина;
		
	КонецЦикла; 
	
КонецПроцедуры

Функция ПолучитьСтруктуруТаблицыДанных()
	
	Данные = Новый ТаблицаЗначений;
	Данные.Колонки.Добавить("Период");
	Данные.Колонки.Добавить("Контрагент");
	Данные.Колонки.Добавить("Показатель");
	Данные.Колонки.Добавить("ЗначениеПоказателя");
	Данные.Колонки.Добавить("Установлен");
	Данные.Колонки.Добавить("Разница");
	Данные.Колонки.Добавить("РазницаПроц");
	
	Возврат Данные;
	
КонецФункции

Функция ПолучитьМассивПоказателейДляРасчета()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Показатели.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Показатели КАК Показатели
	|ГДЕ
	|	Показатели.Расчетный
	|	И НЕ Показатели.ЭтоГруппа
	|	И НЕ Показатели.ПометкаУдаления
	|
	|УПОРЯДОЧИТЬ ПО
	|	Показатели.Порядок";
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
КонецФункции

Функция ПолучитьДанные()
	
	Если ОбщегоНазначенияКлиентСервер.ПериодичностьУстановлена(Периодичность) Тогда
		Данные = ПолучитьПериодичныеДанные();
	Иначе 
		Данные = ПолучитьНепериодичныеДанные();
	КонецЕсли;

	Возврат Данные;
	
КонецФункции

Функция ПолучитьНепериодичныеДанные()
	
	Данные = ПолучитьСтруктуруТаблицыДанных();
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗначенияПоказателей.Период КАК Период,
	|	ЗначенияПоказателей.Контрагент КАК Контрагент,
	|	ЗначенияПоказателей.Показатель КАК Показатель,
	|	ЗначенияПоказателей.ЗначениеПоказателя КАК ЗначениеПоказателя,
	|	ИСТИНА КАК Установлен
	|ИЗ
	|	РегистрСведений.ЗначенияПоказателей КАК ЗначенияПоказателей
	|ГДЕ
	|	ЗначенияПоказателей.Период МЕЖДУ &Дата1 И &Дата2
	|	И ЗначенияПоказателей.Периодичность = &Периодичность
	|	И ЗначенияПоказателей.СтандартОтчетности В (&СтандартОтчетности, &ПустойСтандартОтчетности)";
	
	Запрос.УстановитьПараметр("Дата1", НачалоДня(Дата1));
	Запрос.УстановитьПараметр("Дата2", КонецДня(Дата2));
	Запрос.УстановитьПараметр("Периодичность", Периодичность);
	Запрос.УстановитьПараметр("СтандартОтчетности", СтандартОтчетности);
	Запрос.УстановитьПараметр("ПустойСтандартОтчетности", Справочники.СтандартыОтчетности.ПустаяСсылка());
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Данные.Добавить(), Выборка);
	КонецЦикла; 
	
	Возврат Данные;
	
КонецФункции
	
Функция ПолучитьПериодичныеДанные()	
	
	РазрядностьОтчета = 4; // макс.число знаков дробной части для расчётных показателей
	
	ТаблицаДанных = ПолучитьСтруктуруТаблицыДанных();
	ТаблицаДанных.Колонки.Добавить("ИндексПериода");
	ТаблицаДанных.Колонки.Добавить("УсловноеОбозначение");
	ТаблицаДанных.Индексы.Добавить("ИндексПериода, Контрагент, Показатель");
	ТаблицаДанных.Индексы.Добавить("Контрагент");
	
	Если 1=2 Тогда
		ТаблицаДанных = Новый ТаблицаЗначений; 
	КонецЕсли; 
	
	КонтрагентДляОтбора = Неопределено;
	Настойки = КомпоновщикНастроек.ПолучитьНастройки();
	Для Каждого ЭлементОтбора Из Настойки.Отбор.Элементы Цикл
		Если ТипЗнч(ЭлементОтбора) = Тип("ЭлементОтбораКомпоновкиДанных")
			И ЭлементОтбора.Использование
			И ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Контрагент")
			И ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно 
			И ТипЗнч(ЭлементОтбора.ПравоеЗначение) = Тип("СправочникСсылка.Контрагенты") Тогда
			КонтрагентДляОтбора = ЭлементОтбора.ПравоеЗначение;
		КонецЕсли; 
	КонецЦикла; 
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗначенияПоказателей.Период КАК Период,
	|	ЗначенияПоказателей.Контрагент КАК Контрагент,
	|	ЗначенияПоказателей.Показатель КАК Показатель,
	|	ЗначенияПоказателей.ЗначениеПоказателя КАК ЗначениеПоказателя
	|ПОМЕСТИТЬ ВТ_ЗначенияПериодичныхПоказателей
	|ИЗ
	|	РегистрСведений.ЗначенияПоказателей КАК ЗначенияПоказателей
	|ГДЕ
	|	ЗначенияПоказателей.Период МЕЖДУ &ДатаНачалаОсмотра И &Дата2
	|	И ЗначенияПоказателей.Периодичность = &Периодичность
	|	И ЗначенияПоказателей.СтандартОтчетности В (&СтандартОтчетности, &ПустойСтандартОтчетности)
	|	И &ОтборПоКонтрагенту
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период,
	|	Контрагент,
	|	Показатель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_ЗначенияПериодичныхПоказателей.Период КАК Период,
	|	&ВыражениеКонцаПериода КАК КонецПериода,
	|	ВТ_ЗначенияПериодичныхПоказателей.Контрагент КАК Контрагент
	|ПОМЕСТИТЬ ВТ_КонтрагентыИПериоды
	|ИЗ
	|	ВТ_ЗначенияПериодичныхПоказателей КАК ВТ_ЗначенияПериодичныхПоказателей
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период,
	|	Контрагент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗначенияПоказателей.Период КАК ПериодДляСреза,
	|	ВТ_КонтрагентыИПериоды.Период КАК Период,
	|	ВТ_КонтрагентыИПериоды.Контрагент КАК Контрагент,
	|	ЗначенияПоказателей.Показатель КАК Показатель,
	|	ЗначенияПоказателей.ЗначениеПоказателя КАК ЗначениеПоказателя
	|ПОМЕСТИТЬ ВТ_ДанныеДляСрезаНепериодичных
	|ИЗ
	|	РегистрСведений.ЗначенияПоказателей КАК ЗначенияПоказателей
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_КонтрагентыИПериоды КАК ВТ_КонтрагентыИПериоды
	|		ПО (ЗначенияПоказателей.Период <= ВТ_КонтрагентыИПериоды.КонецПериода
	|				ИЛИ (ВТ_КонтрагентыИПериоды.Период = &ДатаПоследнегоПериода
	|					И ЗначенияПоказателей.Показатель.ИспользоватьПоследнееЗначениеДляПоследнегоПериода))
	|			И ЗначенияПоказателей.Контрагент = ВТ_КонтрагентыИПериоды.Контрагент
	|ГДЕ
	|	ЗначенияПоказателей.Периодичность В (&ПериодичностьНет, &ПустаяПериодичность)
	|	И ЗначенияПоказателей.СтандартОтчетности В (&СтандартОтчетности, &ПустойСтандартОтчетности)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период,
	|	Контрагент,
	|	Показатель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ДанныеДляСрезаНепериодичных.Период КАК Период,
	|	ВТ_ДанныеДляСрезаНепериодичных.Контрагент КАК Контрагент,
	|	ВТ_ДанныеДляСрезаНепериодичных.Показатель КАК Показатель,
	|	ВТ_ДанныеДляСрезаНепериодичных.ЗначениеПоказателя КАК ЗначениеПоказателя
	|ПОМЕСТИТЬ ВТ_ЗначенияНепериодичныхПоказателей
	|ИЗ
	|	ВТ_ДанныеДляСрезаНепериодичных КАК ВТ_ДанныеДляСрезаНепериодичных
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ВТ_ДанныеДляСрезаНепериодичных.Период КАК Период,
	|			ВТ_ДанныеДляСрезаНепериодичных.Контрагент КАК Контрагент,
	|			ВТ_ДанныеДляСрезаНепериодичных.Показатель КАК Показатель,
	|			МАКСИМУМ(ВТ_ДанныеДляСрезаНепериодичных.ПериодДляСреза) КАК ПериодДляСреза
	|		ИЗ
	|			ВТ_ДанныеДляСрезаНепериодичных КАК ВТ_ДанныеДляСрезаНепериодичных
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ВТ_ДанныеДляСрезаНепериодичных.Период,
	|			ВТ_ДанныеДляСрезаНепериодичных.Контрагент,
	|			ВТ_ДанныеДляСрезаНепериодичных.Показатель) КАК ВложенныйЗапрос
	|		ПО ВТ_ДанныеДляСрезаНепериодичных.ПериодДляСреза = ВложенныйЗапрос.ПериодДляСреза
	|			И ВТ_ДанныеДляСрезаНепериодичных.Период = ВложенныйЗапрос.Период
	|			И ВТ_ДанныеДляСрезаНепериодичных.Контрагент = ВложенныйЗапрос.Контрагент
	|			И ВТ_ДанныеДляСрезаНепериодичных.Показатель = ВложенныйЗапрос.Показатель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ЗначенияПериодичныхПоказателей.Период КАК Период,
	|	ВТ_ЗначенияПериодичныхПоказателей.Контрагент КАК Контрагент,
	|	ВТ_ЗначенияПериодичныхПоказателей.Показатель КАК Показатель,
	|	ВТ_ЗначенияПериодичныхПоказателей.ЗначениеПоказателя КАК ЗначениеПоказателя
	|ПОМЕСТИТЬ ВТ_ЗначенияПоказателей
	|ИЗ
	|	ВТ_ЗначенияПериодичныхПоказателей КАК ВТ_ЗначенияПериодичныхПоказателей
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_ЗначенияНепериодичныхПоказателей.Период,
	|	ВТ_ЗначенияНепериодичныхПоказателей.Контрагент,
	|	ВТ_ЗначенияНепериодичныхПоказателей.Показатель,
	|	ВТ_ЗначенияНепериодичныхПоказателей.ЗначениеПоказателя
	|ИЗ
	|	ВТ_ЗначенияНепериодичныхПоказателей КАК ВТ_ЗначенияНепериодичныхПоказателей
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период,
	|	Контрагент,
	|	Показатель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Показатели.Ссылка КАК Показатель,
	|	Показатели.УстановленоЗначениеПоУмолчанию КАК УстановленоЗначениеПоУмолчанию,
	|	Показатели.ЗначениеПоУмолчанию КАК ЗначениеПоУмолчанию
	|ПОМЕСТИТЬ ВТ_Показатели
	|ИЗ
	|	Справочник.Показатели КАК Показатели
	|ГДЕ
	|	НЕ Показатели.Расчетный
	|	И НЕ Показатели.ЭтоГруппа
	|	И НЕ Показатели.ПометкаУдаления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_КонтрагентыИПериоды.Период КАК Период,
	|	ВТ_КонтрагентыИПериоды.Контрагент КАК Контрагент,
	|	ВТ_Показатели.Показатель КАК Показатель,
	|	ВТ_Показатели.УстановленоЗначениеПоУмолчанию КАК УстановленоЗначениеПоУмолчанию,
	|	ВТ_Показатели.ЗначениеПоУмолчанию КАК ЗначениеПоУмолчанию
	|ПОМЕСТИТЬ ВТ_Матрица
	|ИЗ
	|	ВТ_КонтрагентыИПериоды КАК ВТ_КонтрагентыИПериоды,
	|	ВТ_Показатели КАК ВТ_Показатели
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период,
	|	Контрагент,
	|	Показатель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Матрица.Период КАК Период,
	|	ВТ_Матрица.Контрагент КАК Контрагент,
	|	ВТ_Матрица.Показатель КАК Показатель,
	|	ВТ_Матрица.Показатель.УсловноеОбозначение КАК УсловноеОбозначение,
	|	ВЫБОР
	|		КОГДА НЕ ВТ_ЗначенияПоказателей.ЗначениеПоказателя ЕСТЬ NULL
	|			ТОГДА ВТ_ЗначенияПоказателей.ЗначениеПоказателя
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ВТ_Матрица.УстановленоЗначениеПоУмолчанию
	|					ТОГДА ВТ_Матрица.ЗначениеПоУмолчанию
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|	КОНЕЦ КАК ЗначениеПоказателя,
	|	ВЫБОР
	|		КОГДА НЕ ВТ_ЗначенияПоказателей.ЗначениеПоказателя ЕСТЬ NULL
	|				ИЛИ ВТ_Матрица.УстановленоЗначениеПоУмолчанию
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Установлен
	|ИЗ
	|	ВТ_Матрица КАК ВТ_Матрица
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЗначенияПоказателей КАК ВТ_ЗначенияПоказателей
	|		ПО ВТ_Матрица.Период = ВТ_ЗначенияПоказателей.Период
	|			И ВТ_Матрица.Контрагент = ВТ_ЗначенияПоказателей.Контрагент
	|			И ВТ_Матрица.Показатель = ВТ_ЗначенияПоказателей.Показатель
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период,
	|	Контрагент
	|ИТОГИ ПО
	|	Период,
	|	Контрагент
	|АВТОУПОРЯДОЧИВАНИЕ";
	Запрос.УстановитьПараметр("ДатаНачалаОсмотра", НачалоДня(ОбщегоНазначенияКлиентСервер.ДобавитьПериоды(Дата1, Периодичность, -КолвоПериодовДляОсмотраНазад)));
	Запрос.УстановитьПараметр("Дата1", НачалоДня(Дата1));
	Запрос.УстановитьПараметр("Дата2", КонецДня(Дата2));
	Запрос.УстановитьПараметр("ДатаПоследнегоПериода", ОбщегоНазначенияКлиентСервер.ПолучитьДатуНачалаПериода(Дата2, Периодичность));
	Запрос.УстановитьПараметр("Периодичность", Периодичность);
	Запрос.УстановитьПараметр("ПериодичностьНет", Перечисления.Периодичность.Нет);
	Запрос.УстановитьПараметр("ПустаяПериодичность", Перечисления.Периодичность.ПустаяСсылка());
	Запрос.УстановитьПараметр("СтандартОтчетности", СтандартОтчетности);
	Запрос.УстановитьПараметр("ПустойСтандартОтчетности", Справочники.СтандартыОтчетности.ПустаяСсылка());
	
	ВыражениеКонцаПериода = "КОНЕЦПЕРИОДА(Период, ДЕНЬ)";
	Если Периодичность = Перечисления.Периодичность.Год Тогда
		ВыражениеКонцаПериода = "КОНЕЦПЕРИОДА(Период, ГОД)";
	ИначеЕсли Периодичность = Перечисления.Периодичность.Квартал Тогда
		ВыражениеКонцаПериода = "КОНЕЦПЕРИОДА(Период, КВАРТАЛ)";
	ИначеЕсли Периодичность = Перечисления.Периодичность.Месяц Тогда
		ВыражениеКонцаПериода = "КОНЕЦПЕРИОДА(Период, МЕСЯЦ)";
	КонецЕсли; 
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ВыражениеКонцаПериода", ВыражениеКонцаПериода);
	
	Если ЗначениеЗаполнено(КонтрагентДляОтбора) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ОтборПоКонтрагенту", "Контрагент = &КонтрагентДляОтбора");
		Запрос.УстановитьПараметр("КонтрагентДляОтбора", КонтрагентДляОтбора);
	Иначе 
		Запрос.УстановитьПараметр("ОтборПоКонтрагенту", Истина);
	КонецЕсли; 
	
	МассивПоказателейДляРасчета = ПолучитьМассивПоказателейДляРасчета();
	УсловныеОбозначения = Новый Соответствие;
	Для Каждого Показатель Из МассивПоказателейДляРасчета Цикл
		УсловныеОбозначения.Вставить(Показатель, Показатель.УсловноеОбозначение);
	КонецЦикла; 
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаПоПериодам = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаПоПериодам.Следующий() Цикл
		
		// сменился период - уменьшаем все индексы периодов на 1
		Для Каждого СтрокаДанных Из ТаблицаДанных Цикл
			СтрокаДанных.ИндексПериода = СтрокаДанных.ИндексПериода - 1;
		КонецЦикла; 
		
		ВыборкаПоКонтрагентам = ВыборкаПоПериодам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаПоКонтрагентам.Следующий() Цикл
			
			ЗначенияПоказателей = Новый Соответствие;
			
			ТЗТек = Новый ТаблицаЗначений;
			ТЗТек.Колонки.Добавить("Показатель");
			ТЗТек.Колонки.Добавить("ЗначениеПоказателя");
			ТЗТек.Колонки.Добавить("Установлен");
			ТЗТек.Колонки.Добавить("УсловноеОбозначение");
			
			// добавим значения периодических показателей
			Выборка = ВыборкаПоКонтрагентам.Выбрать();
			Пока Выборка.Следующий() Цикл
				ТекЗнач = Выборка.ЗначениеПоказателя;
				ЗначенияПоказателей.Вставить(Выборка.УсловноеОбозначение, ТекЗнач);
				ЗначенияПоказателей.Вставить(Выборка.УсловноеОбозначение + "(0)", ТекЗнач);
				ЗаполнитьЗначенияСвойств(ТЗТек.Добавить(), Выборка);
			КонецЦикла;
			
			Если ВыборкаПоПериодам.Период >= Дата1 Тогда
			
				// добавим значения прошлых показателей
				Фильтр = Новый Структура("Контрагент", ВыборкаПоКонтрагентам.Контрагент); 
				Для Каждого СтрокаДанных Из ТаблицаДанных.НайтиСтроки(Фильтр) Цикл
					Если НЕ СтрокаДанных.Установлен Тогда
						Продолжить;
					КонецЕсли; 
					ТекУслОбозн = СтрокаДанных.УсловноеОбозначение + "(" + Формат(СтрокаДанных.ИндексПериода, "ЧГ=") + ")";
					ЗначенияПоказателей.Вставить(ТекУслОбозн, СтрокаДанных.ЗначениеПоказателя);
				КонецЦикла; 
				
				// расчёт показателей
				Для Каждого Показатель Из МассивПоказателейДляРасчета Цикл
					ТекЗнач = ОбщегоНазначенияСервер.РассчитатьЗначениеПоказателя(ЗначенияПоказателей, Показатель);
					Установлен = Истина;
					Если ТекЗнач <> Неопределено Тогда
						ТекЗнач = Окр(ТекЗнач, РазрядностьОтчета);
						Установлен = Истина
					Иначе 
						Установлен = Ложь;
					КонецЕсли; 
					ТекУслОбозн = УсловныеОбозначения.Получить(Показатель);
					ЗначенияПоказателей.Вставить(Показатель, ТекЗнач);
					ЗначенияПоказателей.Вставить(ТекУслОбозн + "(0)", ТекЗнач);
					НоваяСтрока = ТЗТек.Добавить(); 
					НоваяСтрока.Показатель			= Показатель;
					НоваяСтрока.ЗначениеПоказателя	= ТекЗнач;
					НоваяСтрока.Установлен			= Установлен;
					НоваяСтрока.УсловноеОбозначение	= ТекУслОбозн;
				КонецЦикла; 
				
			Иначе 
				// показатели с Период < Дата1 (aka "дата начала периода отчёта") нужны только для расчёта показателей "с индексами", 
				// и для них нужны [скорее всего] только исходные данные, поэтому не будем тратить время и считать расчетные показатели
			КонецЕсли; 
			
			// перенос рассчитанных данных в таблицу
			Для Каждого СтрокаТЗ Из ТЗТек Цикл
				НоваяСтрока = ТаблицаДанных.Добавить(); 
				НоваяСтрока.ИндексПериода 		= 0; // для тек.периода индекс = 0
				НоваяСтрока.Период				= ВыборкаПоПериодам.Период;
				НоваяСтрока.Контрагент			= ВыборкаПоКонтрагентам.Контрагент;
				НоваяСтрока.Показатель			= СтрокаТЗ.Показатель;
				НоваяСтрока.ЗначениеПоказателя	= СтрокаТЗ.ЗначениеПоказателя;
				НоваяСтрока.Установлен			= СтрокаТЗ.Установлен;
				НоваяСтрока.УсловноеОбозначение	= СтрокаТЗ.УсловноеОбозначение;
				Если НоваяСтрока.Установлен Тогда
					// вычисляем разницу между текущим и прошлым периодом
					СтруктураПоиска = Новый Структура("ИндексПериода, Контрагент, Показатель", -1, НоваяСтрока.Контрагент, НоваяСтрока.Показатель);
					НайденныеСтроки = ТаблицаДанных.НайтиСтроки(СтруктураПоиска);
					СтрокаПредПериода = ?(НайденныеСтроки.Количество() > 0, НайденныеСтроки[0], Неопределено);
					Если СтрокаПредПериода <> Неопределено И СтрокаПредПериода.Установлен Тогда
						НоваяСтрока.Разница		= НоваяСтрока.ЗначениеПоказателя - СтрокаПредПериода.ЗначениеПоказателя;
						НоваяСтрока.РазницаПроц	= ?(ЗначениеЗаполнено(СтрокаПредПериода.ЗначениеПоказателя), 
													Окр(НоваяСтрока.Разница / СтрокаПредПериода.ЗначениеПоказателя * 100, РазрядностьОтчета),
													0);
													
					КонецЕсли; 
				КонецЕсли; 
			КонецЦикла; 
			
		КонецЦикла; 
		
	КонецЦикла; 

	// результат
	Данные = ПолучитьСтруктуруТаблицыДанных();
	Для Каждого СтрокаДанных Из ТаблицаДанных Цикл
		Если СтрокаДанных.Период >= Дата1 Тогда
			ЗаполнитьЗначенияСвойств(Данные.Добавить(), СтрокаДанных);
		КонецЕсли; 
	КонецЦикла; 
	
	Возврат Данные;
	
КонецФункции

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ДокументРезультат.Очистить();
	
	Данные = ПолучитьДанные();
	ВнешниеДанные = Новый Структура("Данные", Данные);
	
	ФорматДаты = ОбщегоНазначенияКлиентСервер.ПолучитьФорматРедактированияДаты(Периодичность);
	
	НастройкаФормата = СхемаКомпоновкиДанных.НаборыДанных[0].Поля.Найти("Период").Оформление.Элементы.Найти("Формат");
	НастройкаФормата.Использование = ЗначениеЗаполнено(ФорматДаты);
	НастройкаФормата.Значение = ФорматДаты;
	
	ДобавитьУсловноеОформлениеПоказателей(КомпоновщикНастроек.Настройки);
		
	Настройки = КомпоновщикНастроек.ПолучитьНастройки();
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, Настройки, ДанныеРасшифровки);
	
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, ВнешниеДанные, ДанныеРасшифровки);
		
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	
КонецПроцедуры
